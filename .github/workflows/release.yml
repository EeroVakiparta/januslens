name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
      release_type:
        description: 'Release type'
        required: true
        default: 'minor'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
      
      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
      
      - name: Install dependencies
        run: npm ci
      
      - name: Update version in package.json
        run: |
          npm version ${{ github.event.inputs.version }} --no-git-tag-version
      
      - name: Update version in Cargo.toml
        run: |
          cd src-tauri
          sed -i "s/version = \".*\"/version = \"${{ github.event.inputs.version }}\"/g" Cargo.toml
      
      - name: Generate changelog
        id: changelog
        run: |
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          
          if [ -z "$PREVIOUS_TAG" ]; then
            echo "CHANGELOG=Initial release" >> $GITHUB_OUTPUT
            echo "# Changes in ${{ github.event.inputs.version }}" > CHANGELOG.md
            echo "" >> CHANGELOG.md
            echo "Initial release" >> CHANGELOG.md
          else
            CHANGELOG=$(git log ${PREVIOUS_TAG}..HEAD --pretty=format:"- %s (%an)" --reverse)
            echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
            echo "$CHANGELOG" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            
            echo "# Changes in ${{ github.event.inputs.version }}" > CHANGELOG.md
            echo "" >> CHANGELOG.md
            echo "$CHANGELOG" >> CHANGELOG.md
          fi
      
      - name: Commit changes
        run: |
          git add package.json src-tauri/Cargo.toml CHANGELOG.md
          git commit -m "chore: release v${{ github.event.inputs.version }}"
          git tag -a "v${{ github.event.inputs.version }}" -m "Version ${{ github.event.inputs.version }}"
          git push
          git push --tags
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ github.event.inputs.version }}"
          name: "JanusLens v${{ github.event.inputs.version }}"
          body: ${{ steps.changelog.outputs.CHANGELOG }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
      
  build:
    needs: release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
      - uses: actions/checkout@v3
        with:
          ref: "v${{ github.event.inputs.version }}"
      
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
      
      - name: Install system dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build and upload
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: "v${{ github.event.inputs.version }}"
          releaseName: "JanusLens v${{ github.event.inputs.version }}"
          releaseBody: "See CHANGELOG.md for details"
          releaseDraft: false
          prerelease: false 